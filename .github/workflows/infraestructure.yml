name: Deploy Infraestructure

on:
  push:
    branches:
      - master

env:
  # Github token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # S3
  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
  
  # Terraform
  TERRAFORM_VERSION: 'latest'
  TF_VAR_key_name: ${{ secrets.KEY_NAME }}
  TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }}

  # AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  s3:
    name: Setup aws
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Install boto3
        run: |
          pip install boto3

      - name: Create bucket
        run: |
          python scripts/create_bucket.py

  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: s3
 
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TERRAFORM_VERSION }}
          tf_actions_subcommand: 'fmt'

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TERRAFORM_VERSION }}
          tf_actions_subcommand: 'init'

      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TERRAFORM_VERSION }}
          tf_actions_subcommand: 'validate'

      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TERRAFORM_VERSION }}
          tf_actions_subcommand: 'plan'
      
      - name: Setup AWS Cli
        uses: chrislennon/action-aws-cli@v1.1
      
      - name: Download private key
        run: |
          aws s3 cp s3://ci-gorilla-test-habib/${{ secrets.KEY_NAME }}.pem ${{ secrets.KEY_NAME }}.pem
          chmod 400 ${{ secrets.KEY_NAME }}.pem

      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TERRAFORM_VERSION }}
          tf_actions_subcommand: 'apply'

      - name: Restore Artifacts
        uses: chrislennon/action-aws-cli@v1.1
        run: |
          aws s3 sync ./artifacts s3://${{ secrets.BUCKET_NAME }}/
          
  release:
    name: Trigger release
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated DevOps release
          draft: false
          prerelease: false
