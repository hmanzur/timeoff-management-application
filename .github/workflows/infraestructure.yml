on:
  push:
    branches:
      - master

name: Deploy Infraestructure

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  s3:
    name: Setup aws
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Install boto3
        run: |
          pip install boto3

      - name: Create bucket
        run: |
          python scripts/create_bucket.py

  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: s3
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'fmt'

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'init'

      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'validate'

      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'plan'

      - name: Download private key
        uses: chrislennon/action-aws-cli@v1.1
        run: |
          aws s3 cp s3://ci-gorilla-test-habib/${{ secrets.KEY_NAME }}.pem artifacts/${{ secrets.KEY_NAME }}.pem
          chmod 400 artifacts/${{ secrets.KEY_NAME }}.pem

      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.21
          tf_actions_subcommand: 'apply'

      - name: Artifact backup
        uses: actions/upload-artifact@v1
        with:
          name: ${{ secrets.KEY_NAME }}
          path: artifacts
  
  next:
    name: Trigger release
    if: github.ref == 'refs/head/master'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger application
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: hmanzur/timeoff-management-application
          event-type: deploy-app
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
